// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  nome       String
  email      String
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  Escala Escala[]
  @@map("users")
}

model Base {
  id  Int   @id @default(autoincrement())
  nome String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  Escala Escala[]
  @@map("bases")
}

model TipoVeiculo {
  id  Int   @id @default(autoincrement())
  nome String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  Veiculo Veiculo[]
  @@map("tipo_veiculos")
}

model Veiculo {
  id Int @id @default(autoincrement())
  nome String
  tipo_veiculo_id Int
  placa String
  cnes String
  qrcode String
  situacao String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  Escala Escala[]

  TipoVeiculo TipoVeiculo @relation(fields: [tipo_veiculo_id], references: [id])
  @@map("veiculos")
}

model Funcao{
  id Int @id @default(autoincrement())
  nome String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  Profissional Profissional[]
  @@map("funcoes")
}

model Profissional{
  id Int @id @default(autoincrement())
  nome String
  funcao_id Int
  matricula String
  cpf String
  data_nascimento DateTime
  sexo String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  EscalaEquipe EscalaEquipe[]

  Funcao Funcao @relation(fields: [funcao_id], references: [id])
  @@map("profissionais")
}

model Escala{
  id Int @id @default(autoincrement())
  base_id Int
  veiculo_id Int
  data_inicio DateTime
  turno String
  km_inicial String
  km_final String
  combustivel String
  situacao String
  user_id Int
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  EscalaEquipe EscalaEquipe[]

  Base Base @relation(fields: [base_id], references: [id])
  Veiculo Veiculo @relation(fields: [veiculo_id], references: [id])
  User User @relation(fields: [user_id], references: [id])

  @@map("escalas")
}

model EscalaEquipe{
  id Int @id @default(autoincrement())
  escala_id Int
  profissional_id Int
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  Escala Escala @relation(fields: [escala_id], references: [id])
  Profissional Profissional @relation(fields: [profissional_id], references: [id])

  @@map("escalas_equipe")
}

